
import pdfplumber
import re
import time
from multiprocessing import Pool
import openpyxl


#=================任务说明
#本脚本用于找到文件的第二节公司简介和主要财务指标，并提取字号。


#-----------------定义变量

#定义全局变量
#定义任务
任务报告期目标="2023年报"
任务时间批次="全量"

#定义控制变量
单次任务上限 = 200
开启任务跳过 = True

#-----------------固定变量

#定义pdf文档位置
pdf输入目录 = "/Users/xiami/Desktop/AICode/任务/"+任务报告期目标+"/"+任务时间批次+"/年报源文件/"
任务文档位置 = "/Users/xiami/Desktop/AICode/任务/"+任务报告期目标+"/"+任务时间批次+"/A扫描任务.xlsx"

#定义excel方法
wb = openpyxl.load_workbook(任务文档位置)
ws = wb.active

#字典

任务状态列=11
前置条件列=10
分析材料列=9



#-----------------定义函数

def 提取大写数字方法(标题):
    # 提取标题中大写数字方法

    #定义方法与映射字典
    提取大大写数字方法 = lambda text: (
        re.search(r"(一|二|三|四|五|六|七|八|九|十|十一|十二|十三|十四|十五|十六)", text))
    中文数字字典表 = {'一': 1, '二': 2, '三': 3, '四': 4, '五': 5, '六': 6, '七': 7, '八': 8, '九': 9, '十': 10,
                      '十一': 11, '十二': 12, '十三': 13, '十四': 14, '十五': 15, '十六': 16}

    #获取标题文案
    标题文案 = 标题[1]

    #提取标题中大写数字re内容
    标题大写数字 = 提取大大写数字方法(标题文案)

    #拆解re返回结果获得大写数字
    大写数字 = 标题大写数字.group()

    #对比字典表获得相应数字
    数字 = 中文数字字典表[大写数字]

    return 数字

税项判断方法 = lambda text: (re.search(r"税项", text) is not None)
合并财务报表判断方法 = lambda text: (re.search(r"(合并)?财务报表(主要|重要)?项目(注释|附注)", text) is not None)
合并范围判断方法 = lambda text: (re.search(r"合并范围的(变更|变动)", text) is not None)


#-----------------任务执行


# 新增：记录开始时间
单次循环开始时间 = time.time()





# 遍历每一行（从第四行开始，跳过表头）
for row in ws.iter_rows(min_row=4, max_col=任务状态列):

    # 定义初始结果表
    税项结果表 = []
    合并财务报表结果表 = []
    合并范围结果表 = []

    #获取关键值
    行号 = row[0].row
    分析材料 = row[分析材料列].value
    前置判断 = row[前置条件列].value


    #前置跳过
    if 前置判断 != "是":
        continue


    #定义初始变量
    是否连续="是"

    #逆向
    二级标题结果表=eval(分析材料)

    #获取初始标题
    初始二级标题=二级标题结果表[0]

    #获取初始数字
    初始数字=提取大写数字方法(初始二级标题)

    #循环二级标题结果表
    for 二级标题结果 in 二级标题结果表:

        #获取二级标题数字
        标题数字=提取大写数字方法(二级标题结果)

        #初始数字比较
        if 初始数字==标题数字:

            #初始数字+1
            初始数字+=1

        else:
            是否连续="否"


        #判断属于那个结果集
        if 税项判断方法(二级标题结果[1]):
            税项结果表.append(二级标题结果)

        if 合并财务报表判断方法(二级标题结果[1]):
            合并财务报表结果表.append(二级标题结果)

        if 合并范围判断方法(二级标题结果[1]):
            合并范围结果表.append(二级标题结果)



    #判断个数
    标题个数=len(二级标题结果表)

    税项结果表个数=len(税项结果表)
    合并财务报表结果表个数=len(合并财务报表结果表)
    合并范围结果表个数=len(合并范围结果表)


    #结束消息
    结束消息="扫描成功"


    # 写入结果
    ws.cell(row=行号, column=任务状态列+1, value=结束消息)
    ws.cell(row=行号, column=任务状态列+2, value=是否连续)
    ws.cell(row=行号, column=任务状态列+3, value=标题个数)
    ws.cell(row=行号, column=任务状态列 + 4, value=str(税项结果表))
    ws.cell(row=行号, column=任务状态列+5, value=税项结果表个数)
    ws.cell(row=行号, column=任务状态列 + 6, value=str(合并财务报表结果表))
    ws.cell(row=行号, column=任务状态列+7, value=合并财务报表结果表个数)
    ws.cell(row=行号, column=任务状态列 + 8, value=str(合并范围结果表))
    ws.cell(row=行号, column=任务状态列+9, value=合并范围结果表个数)




wb.save(任务文档位置)




# 记录完成时间
单次循环结束时间 = time.time()
单次循环耗时 = 单次循环结束时间 - 单次循环开始时间
print("本次循环任务完成，"f"（耗时: {单次循环耗时:.2f} 秒）")


